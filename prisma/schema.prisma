// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  name       String
  role       UserRole
  projects   Project[]
  startups   Startup[]
  IPR        IPR[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
    emailVerified Boolean @default(false)
  resetPasswordToken String?
  resetPasswordTokenExpiry DateTime?
  Collaboration Collaboration[]

  Funding Funding[]
}

// Enum to specify user roles
enum UserRole {
  RESEARCHER
  INNOVATOR
  ENTREPRENEUR
  POLICY_MAKER
  INVESTOR
  IPR_PROFESSIONAL
}

// Define the Project model
model Project {
  id             Int        @id @default(autoincrement())
  title          String
  description    String
  status         ProjectStatus
  researcher     User       @relation(fields: [researcherId], references: [id])
  researcherId   Int
  startDate      DateTime
  endDate        DateTime?
  progress       Float      // Percentage of project progress
  funding        Float
  collaborations Collaboration[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  Funding Funding[]
}

enum ProjectStatus {
  ONGOING
  COMPLETED
  PENDING
}

// Define the Collaboration model for researchers
model Collaboration {
  id        Int      @id @default(autoincrement())
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

// Define the Startup model
model Startup {
  id           Int      @id @default(autoincrement())
  name         String
  description  String
  founder      User     @relation(fields: [founderId], references: [id])
  founderId    Int
  funding      Float
  progress     Float    // Percentage of startup growth progress
  innovations  Innovation[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Funding Funding[]
}

// Define the Innovation model
model Innovation {
  id             Int      @id @default(autoincrement())
  title          String
  description    String
  startup        Startup  @relation(fields: [startupId], references: [id])
  startupId      Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

// Define the IPR (Intellectual Property Rights) model
model IPR {
  id              Int         @id @default(autoincrement())
  title           String
  type            IPRType
  status          IPRStatus
  user            User        @relation(fields: [userId], references: [id])
  userId          Int
  applicationDate DateTime
  approvalDate    DateTime?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

enum IPRType {
  PATENT
  TRADEMARK
  COPYRIGHT
}

enum IPRStatus {
  PENDING
  APPROVED
  REJECTED
}

// Define the Funding model
model Funding {
  id          Int      @id @default(autoincrement())
  amount      Float
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   Int
  startup     Startup? @relation(fields: [startupId], references: [id])
  startupId   Int?
  fundingBody User     @relation(fields: [fundingBodyId], references: [id])
  fundingBodyId Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Define the Analytics model
model Analytics {
  id         Int      @id @default(autoincrement())
  type       AnalyticsType
  data       Json
  createdAt  DateTime @default(now())
}

enum AnalyticsType {
  PROJECT
  STARTUP
  IPR
  RESOURCE
}