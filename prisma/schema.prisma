// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id                       Int       @id @default(autoincrement())
  email                    String    @unique
  password                 String
  name                     String
  role                     String[]
  emailVerified            Boolean   @default(false)
  resetPasswordToken       String?
  resetPasswordTokenExpiry DateTime?
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  projects                 Project[]
  startups                 Startup[]

  Funding Funding[]

  IPR IPR[]

  Collaboration Collaboration[]
}

// Enum for User roles
enum Role {
  RESEARCHER
  INNOVATOR
  ENTREPRENEUR
  POLICY_MAKER
  INVESTOR
  IPR_PROFESSIONAL
}

// Project model
model Project {
  id             Int             @id @default(autoincrement())
  title          String
  description    String
  status         Status
  researcher     User            @relation(fields: [researcherId], references: [id])
  researcherId   Int
  startDate      DateTime
  endDate        DateTime?
  progress       Float           @default(0)
  funding        Float           @default(0)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  collaborations Collaboration[]

  Funding Funding[]
}

// Enum for Project Status
enum Status {
  ONGOING
  COMPLETED
  PENDING
}

// Collaboration model
model Collaboration {
  id        Int      @id @default(autoincrement())
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Startup model
model Startup {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  founder     User      @relation(fields: [founderId], references: [id])
  founderId   Int
  foundedAt   String
    
  teamSize    Int
  location    String
  industry    String
  website     String?
  funding     Float     @default(0)
  progress    Float     @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  patents     Patent[]
  metrics     Metrics[]
  Funding     Funding[]

  Analytics Analytics[]
}

// IPR model
model IPR {
  id              Int       @id @default(autoincrement())
  title           String
  type            IPRType
  status          IPRStatus
  user            User      @relation(fields: [userId], references: [id])
  userId          Int
  applicationDate DateTime
  approvalDate    DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

// Enum for IPR Type
enum IPRType {
  PATENT
  TRADEMARK
  COPYRIGHT
}

// Enum for IPR Status
enum IPRStatus {
  PENDING
  APPROVED
  REJECTED
}

// Patent model (for managing startup patents and storing PDFs)
model Patent {
  id              Int       @id @default(autoincrement())
  title           String
  startup         Startup   @relation(fields: [startupId], references: [id])
  startupId       Int
  description     String
  patentNumber    String    @unique
  pdfPath         String
  applicationDate DateTime
  approvalDate    DateTime?
  status          IPRStatus
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

// Metrics model (tracks performance and financial data for startups)
model Metrics {
  id        Int      @id @default(autoincrement())
  startup   Startup  @relation(fields: [startupId], references: [id])
  startupId Int
  period    DateTime // e.g., 'Q1-2024', 'Jan-2024'
  retention_rate Float?
  mrr_growth Float?
  itv_cac_ratio Float?
  nps_score Float?
  conversion_rate Float?
  revenue   Float?
  expenses  Float?
  valuation Float?
  net_profit    Float?
  gross_profit    Float?
  gross_margin Float?
  founders_equity Int?
  investors_equity Int?
  employees_equity Int?
  customers Int?
  employees Int?
  churnRate Float?
  burnRate  Float?
  cac       Float?
  equity    Float?
  runway    Float?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Analytics model (stores aggregated or derived insights)
model Analytics {
  id        Int           @id @default(autoincrement())
  startup   Startup?      @relation(fields: [startupId], references: [id])
  startupId Int?
  type      AnalyticsType
  data      Json // Can store complex data like aggregated metrics, graphs, etc.
  createdAt DateTime      @default(now())
}

// Enum for Analytics Type
enum AnalyticsType {
  PROJECT
  STARTUP
  IPR
  RESOURCE
  METRIC
}

// Funding model
model Funding {
  id            Int      @id @default(autoincrement())
  amount        Float
  project       Project? @relation(fields: [projectId], references: [id])
  projectId     Int?
  startup       Startup? @relation(fields: [startupId], references: [id])
  startupId     Int?
  fundingBody   User     @relation(fields: [fundingBodyId], references: [id])
  fundingBodyId Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
